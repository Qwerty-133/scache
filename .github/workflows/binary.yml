name: Build Executables

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  build:
    timeout-minutes: 20

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-20.04, macos-11]
        include:
          - os: windows-2019
            pathsep: ";"
            asset_name: spcache_windows.exe
            executable_mime: "application/vnd.microsoft.portable-executable"
          - os: ubuntu-20.04
            pathsep: ":"
            asset_name: spcache_linux
            executable_mime: "application/x-executable"
          - os: macos-11
            pathsep: ":"
            asset_name: spcache_macos
            executable_mime: "application/x-mach-binary"

    steps:
      - uses: actions/checkout@v3

      - name: Setup the Python Environment
        uses: Qwerty-133/python-setup@v1
        with:
          python-version: 3.11
          skip-pre-commit: true
          use-cache: false

      - name: Build executable with PyInstaller
        run: >
          poetry run pyinstaller -F --name ${{ matrix.asset_name }} spcache/__main__.py --copy-metadata spcache

      - name: Quickly test executable
        run: |
          ./dist/${{ matrix.asset_name }} --version
          ./dist/${{ matrix.asset_name }} set --file .gitattributes || [ $? -eq 3 ]

      - name: Upload binary as release asset
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: ${{ matrix.executable_mime }}
